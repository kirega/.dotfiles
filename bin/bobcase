#!/usr/bin/env elixir

#     __            __
#    / /_   ____   / /_   _____ ____ _ _____ ___
#   / __ \ / __ \ / __ \ / ___// __ `// ___// _ \
#  / /_/ // /_/ // /_/ // /__ / /_/ /(__  )/  __/
# /_.___/ \____//_.___/ \___/ \__,_//____/ \___/

encode = fn {letter, position} ->
  if rem(position, 2) == 0 do
    String.upcase(letter)
  else
    String.downcase(letter)
  end
end

slurp = fn
  [] -> IO.read(:stdio, :all)
  text -> text |> Enum.join(" ")
end

System.argv()
|> slurp.()
|> String.graphemes()
|> Enum.with_index()
|> Enum.map(encode)
|> Enum.join()
|> IO.write()
